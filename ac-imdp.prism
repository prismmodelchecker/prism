mdp


const int maxX = 8;//10;
const int maxY = 5;//4;
const double r=0.8; //= 0.820795462532;// = 0.5; // pilot response factor
const double e1 = 0.1;
const double p=0.3;// = 0.19; // prob of adversary moving up or down, ensure 2p <= 1
const double e2=0.01;


formula xclose = (x-ax >= 0 & x-ax < 3) | (ax-x >= 0 & ax-x < 3);
formula yclose = (y-ay >= 0 & y-ay < 2) | (ay-y >= 0 & ay-y < 2);
formula collision = xclose & yclose;

module aircraft

	x : [0..maxX] init 0;
	y : [0..maxY] init 1;


	[down] x < maxX -> [r-e1,r+e1] : (y'=max(y-1,0)) & (x'=x+1) + [1-r-e1,1-r+e1] : (y'=y) & (x'=x+1);
	[up] x < maxX -> [r-e1,r+e1] : (y'=min(y+1,maxY)) & (x'=x+1)  + [1-r-e1,1-r+e1]  : (y'=y) & (x'=x+1);
	[stay] x < maxX -> (y'=y) & (x'=x+1);

	[down] x = maxX -> true;
	[up] x = maxX -> true;
	[stay] x = maxX -> true;

endmodule


module adversary
	
	ax : [0..maxX] init maxX;
	ay : [0..maxY] init 1;

	[up] ax > 0 -> p : (ay'=max(ay-1,0)) & (ax'=ax-1) + p : (ay'=min(ay+1,maxY)) & (ax'=ax-1) + 1-2*p : (ay'=ay) & (ax'=ax-1);
	[down] ax > 0 -> p : (ay'=max(ay-1,0)) & (ax'=ax-1) + p : (ay'=min(ay+1,maxY)) & (ax'=ax-1) + 1-2*p : (ay'=ay) & (ax'=ax-1);
	[stay] ax > 0 -> p : (ay'=max(ay-1,0)) & (ax'=ax-1) + p : (ay'=min(ay+1,maxY)) & (ax'=ax-1) + 1-2*p : (ay'=ay) & (ax'=ax-1);
	[up] ax = 0 -> true;
	[down] ax = 0 -> true;
	[stay] ax = 0 -> true;

endmodule

rewards
	[up] true : 1;
	[down] true : 1;
	[stay] true : 1;
endrewards

label "goal" = x=maxX;
label "Crash" = collision;