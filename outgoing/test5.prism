mdp

module FiveOut_allLoPositive
  // States: 0 initial; 1..3 goal-ward; 4..5 sink-ward; 6 goal; 7 sink
  s : [0..7] init 0;

  // Action a: max sink mass = 0.90 ⇒ Pmin(goal) ≥ 0.10
  [a] s=0 ->
    [0.02,0.50] : (s'=1) +   // goal
    [0.02,0.30] : (s'=2) +   // goal
    [0.02,0.30] : (s'=3) +   // goal
    [0.10,0.45] : (s'=4) +   // sink
    [0.10,0.45] : (s'=5);    // sink
  // Feasible: sum lo = 0.26 ≤ 1 ≤ sum hi = 2.00

  // Action b: max sink mass = 0.75 ⇒ Pmin(goal) ≥ 0.25
  [b] s=0 ->
    [0.05,0.35] : (s'=1) +   // goal
    [0.05,0.30] : (s'=2) +   // goal
    [0.05,0.30] : (s'=3) +   // goal
    [0.05,0.35] : (s'=4) +   // sink
    [0.05,0.40] : (s'=5);    // sink
  // Feasible: sum lo = 0.25 ≤ 1 ≤ sum hi = 1.70

  // Route successors
  [t1] s=1 -> (s'=6);
  [t1] s=2 -> (s'=6);
  [t1] s=3 -> (s'=6);
  [t2] s=4 -> (s'=7);
  [t2] s=5 -> (s'=7);

  // Absorbing goal/sink
  [end1] s=6 -> (s'=6);
  [end2] s=7 -> (s'=7);
endmodule

label "goal" = s=6;
label "Crash" = s=7;

rewards
  [a] true : 1;
  [b] true : 1;
endrewards
