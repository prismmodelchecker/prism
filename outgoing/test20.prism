mdp

module TwentyOut_allLoPositive
  // 0 initial; 1..12 to goal; 13..20 to sink; 21 goal; 22 sink
  s : [0..22] init 0;

  // --- action a ---
  // lo(goal)=12*0.01=0.12; hi(sink)=8*0.08=0.64 → Pmin(goal) ≥ max(0.12, 0.36)=0.36
  [a] s=0 ->
    // 12 goal-ward
    [0.01,0.10] : (s'=1)  +
    [0.01,0.10] : (s'=2)  +
    [0.01,0.10] : (s'=3)  +
    [0.01,0.10] : (s'=4)  +
    [0.01,0.10] : (s'=5)  +
    [0.01,0.10] : (s'=6)  +
    [0.01,0.10] : (s'=7)  +
    [0.01,0.10] : (s'=8)  +
    [0.01,0.10] : (s'=9)  +
    [0.01,0.10] : (s'=10) +
    [0.01,0.10] : (s'=11) +
    [0.01,0.10] : (s'=12) +
    // 8 sink-ward
    [0.02,0.08] : (s'=13) +
    [0.02,0.08] : (s'=14) +
    [0.02,0.08] : (s'=15) +
    [0.02,0.08] : (s'=16) +
    [0.02,0.08] : (s'=17) +
    [0.02,0.08] : (s'=18) +
    [0.02,0.08] : (s'=19) +
    [0.02,0.08] : (s'=20);

  // --- action b ---
  // lo(goal)=12*0.015=0.18; hi(sink)=8*0.05=0.40 → Pmin(goal) ≥ max(0.18, 0.60)=0.60
  [b] s=0 ->
    // 12 goal-ward
    [0.015,0.11] : (s'=1)  +
    [0.015,0.11] : (s'=2)  +
    [0.015,0.11] : (s'=3)  +
    [0.015,0.11] : (s'=4)  +
    [0.015,0.11] : (s'=5)  +
    [0.015,0.11] : (s'=6)  +
    [0.015,0.11] : (s'=7)  +
    [0.015,0.11] : (s'=8)  +
    [0.015,0.11] : (s'=9)  +
    [0.015,0.11] : (s'=10) +
    [0.015,0.11] : (s'=11) +
    [0.015,0.11] : (s'=12) +
    // 8 sink-ward
    [0.01,0.05]  : (s'=13) +
    [0.01,0.05]  : (s'=14) +
    [0.01,0.05]  : (s'=15) +
    [0.01,0.05]  : (s'=16) +
    [0.01,0.05]  : (s'=17) +
    [0.01,0.05]  : (s'=18) +
    [0.01,0.05]  : (s'=19) +
    [0.01,0.05]  : (s'=20);

  // Route successors
  [t1] s=1  -> (s'=21); [t1] s=2  -> (s'=21); [t1] s=3  -> (s'=21); [t1] s=4  -> (s'=21);
  [t1] s=5  -> (s'=21); [t1] s=6  -> (s'=21); [t1] s=7  -> (s'=21); [t1] s=8  -> (s'=21);
  [t1] s=9  -> (s'=21); [t1] s=10 -> (s'=21); [t1] s=11 -> (s'=21); [t1] s=12 -> (s'=21);
  [t2] s=13 -> (s'=22); [t2] s=14 -> (s'=22); [t2] s=15 -> (s'=22); [t2] s=16 -> (s'=22);
  [t2] s=17 -> (s'=22); [t2] s=18 -> (s'=22); [t2] s=19 -> (s'=22); [t2] s=20 -> (s'=22);

  // Absorbing
  [end1] s=21 -> (s'=21);
  [end2] s=22 -> (s'=22);
endmodule

rewards
  [a] true : 1;
  [b] true : 1;
endrewards

label "goal" = s=21;
label "Crash" = s=22;
