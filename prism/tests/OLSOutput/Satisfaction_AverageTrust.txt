PRISM
=====

Version: 4.7.dev
Date: Tue Aug 24 15:48:58 EDT 2021
Hostname: YEW
Memory limits: cudd=1g, java(heap)=4.0g
Command line: prism 'E:\Downloads\prism3\prism812\prism\prism\tests\trustroutePOMDP.prism' 'E:\Downloads\prism3\prism812\prism\prism\tests\trustroute.props' -prop 1 -ex

Parsing model file "E:\Downloads\prism3\prism812\prism\prism\tests\trustroutePOMDP.prism"...

Type:        POMDP
Modules:     vehicle driver 
Variables:   v u h 
Observables: v h

Parsing properties file "E:\Downloads\prism3\prism812\prism\prism\tests\trustroute.props"...

36 properties:
(1) <<*>> (R{"max_performance_TrustBased"}max=? [ F "end" ], R{"max_averageTrust"}max=? [ F "end" ])
(2) <<*>> (w1*R{"max_performance_TrustBased"}max=? [ F "end" ]+w2*R{"min_takeoverTimes_V2"}max=? [ F "end" ])
(3) <<*>> (R{"min_takeoverTimes_V2"}max=? [ F "end" ], R{"max_performance_TrustBased"}max=? [ F "end" ])
(4) R{"min_takeoverTimes_V2"}min=? [ F "end" ]
(5) R{"min_takeoverTimes_V2"}max=? [ F "end" ]
(6) R{"max_performance_TrustBased"}max=? [ F "end" ]
(7) R{"max_FinalTrust"}max=? [ F "end" ]
(8) R{"max_performance_TrustBased"}min=? [ F "end" ]
(9) R{"max_averageTrust"}max=? [ F "end" ]
(10) R{"min_distance_decimal"}min=? [ F "end" ]
(11) R{"min_energy_decimal_ManualAuto"}min=? [ F "end" ]
(12) R{"min_energyEfficiency_decimal_ManualAuto"}min=? [ F "end" ]
(13) <<*>> (w1*R{"max_performance_TrustBased"}max=? [ F "end" ]+w2*R{"max_FinalTrust"}max=? [ F "end" ])
(14) <<*>> (w1*R{"max_performance_TrustBased"}max=? [ F "end" ]+w2*R{"max_averageTrust"}max=? [ F "end" ])
(15) <<*>> (w1*R{"max_performance_TrustBased"}max=? [ F "end" ]+w2*R{"min_takeoverTimes_V2"}min=? [ F "end" ])
(16) <<*>> (w1*R{"max_performance_TrustBased"}max=? [ F "end" ]+w2*R{"min_distance_decimal"}min=? [ F "end" ])
(17) <<*>> (w1*R{"max_performance_TrustBased"}max=? [ F "end" ]+w2*R{"min_energy_decimal_ManualAuto"}min=? [ F "end" ])
(18) <<*>> (w1*R{"max_performance_TrustBased"}max=? [ F "end" ]+w2*R{"min_energyEfficiency_decimal_ManualAuto"}min=? [ F "end" ])
(19) <<*>> (w1*R{"max_FinalTrust"}max=? [ F "end" ]+w2*R{"max_averageTrust"}max=? [ F "end" ])
(20) <<*>> (w1*R{"max_FinalTrust"}max=? [ F "end" ]+w2*R{"min_takeoverTimes_V2"}min=? [ F "end" ])
(21) <<*>> (w1*R{"max_FinalTrust"}max=? [ F "end" ]+w2*R{"min_distance_decimal"}min=? [ F "end" ])
(22) <<*>> (w1*R{"max_FinalTrust"}max=? [ F "end" ]+w2*R{"min_energy_decimal_ManualAuto"}min=? [ F "end" ])
(23) <<*>> (w1*R{"max_FinalTrust"}max=? [ F "end" ]+w2*R{"min_energyEfficiency_decimal_ManualAuto"}min=? [ F "end" ])
(24) <<*>> (w1*R{"max_averageTrust"}max=? [ F "end" ]+w2*R{"min_takeoverTimes_V2"}min=? [ F "end" ])
(25) <<*>> (w1*R{"max_averageTrust"}max=? [ F "end" ]+w2*R{"min_distance_decimal"}min=? [ F "end" ])
(26) <<*>> (w1*R{"max_averageTrust"}max=? [ F "end" ]+w2*R{"min_energy_decimal_ManualAuto"}min=? [ F "end" ])
(27) <<*>> (w1*R{"max_averageTrust"}max=? [ F "end" ]+w2*R{"min_energyEfficiency_decimal_ManualAuto"}min=? [ F "end" ])
(28) <<*>> (w1*R{"min_takeoverTimes_V2"}min=? [ F "end" ]+w2*R{"min_distance_decimal"}min=? [ F "end" ])
(29) <<*>> (w1*R{"min_takeoverTimes_V2"}min=? [ F "end" ]+w2*R{"min_energy_decimal_ManualAuto"}min=? [ F "end" ])
(30) <<*>> (w1*R{"min_takeoverTimes_V2"}min=? [ F "end" ]+w2*R{"min_energyEfficiency_decimal_ManualAuto"}min=? [ F "end" ])
(31) <<*>> (w1*R{"min_distance_decimal"}min=? [ F "end" ]+w2*R{"min_energy_decimal_ManualAuto"}min=? [ F "end" ])
(32) <<*>> (w1*R{"min_distance_decimal"}min=? [ F "end" ]+w2*R{"min_energyEfficiency_decimal_ManualAuto"}min=? [ F "end" ])
(33) <<*>> (w1*R{"min_energy_decimal_ManualAuto"}min=? [ F "end" ]+w2*R{"min_energyEfficiency_decimal_ManualAuto"}min=? [ F "end" ])
(34) <<*>> (R{"max_performance_TrustBased"}max=? [ F "end" ], R{"max_FinalTrust"}max=? [ F "end" ])
(35) <<*>> (R{"max_performance_TrustBased"}max=? [ F "end" ], R{"max_FinalTrust"}max=? [ F "end" ], R{"min_takeoverTimes_V2"}max=? [ F "end" ])
(36) <<*>> (w31*R{"max_performance_TrustBased"}max=? [ F "end" ]+w32*R{"max_FinalTrust"}max=? [ F "end" ]+w33*R{"min_takeoverTimes_V2"}max=? [ F "end" ])

---------------------------------------------------------------------

Model checking: <<*>> (R{"max_performance_TrustBased"}max=? [ F "end" ], R{"max_averageTrust"}max=? [ F "end" ])

Building model...

Computing reachable states... 155 states
Reachable states exploration and model construction done in 0.051 secs.
Sorting reachable states list...

Time for model construction: 0.068 seconds.

Type:        POMDP
States:      155 (1 initial)
Obs/unobs:   23/7
Transitions: 2758
Choices:     295
Max/avg:     3/1.90
Starting Prob1 (max)...
Prob1 (max) took 7 iterations and 0.0 seconds.
Initialize Q (weight, priority)[[1.0, 0.0, Infinity], [0.0, 1.0, Infinity]]
initial corner_to_value
[1.0, 0.0] -> [-Infinity, -Infinity]
[0.0, 1.0] -> [-Infinity, -Infinity]
immediate reward
AlphaMatrix: action=0
(AlphaVector 0) 0.058283, 0.36872, 1.1116, 1.6333, 1.8251, 1.8936, 1.9216, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 0.058283, 0.058283, 0.36872, 0.36872, 1.1116, 1.1116, 1.6333, 1.6333, 1.8251, 1.8251, 1.8936, 1.8936, 1.9216, 1.9216, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04534, 0.04534, 0.20055, 0.20055, 0.74598, 0.74598, 1.6402, 1.6402, 2.2728, 2.2728, 2.5639, 2.5639, 2.6905, 2.6905, 0.04534, 0.04534, 0.20055, 0.20055, 0.74598, 0.74598, 1.6402, 1.6402, 2.2728, 2.2728, 2.5639, 2.5639, 2.6905, 2.6905, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
(AlphaVector 1) 0.2, 0.4, 0.6, 0.8, 1.0, 1.2, 1.4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.2, 0.4, 0.4, 0.6, 0.6, 0.8, 0.8, 1.0, 1.0, 1.2, 1.2, 1.4, 1.4, 0.2, 0.2, 0.4, 0.4, 0.6, 0.6, 0.8, 0.8, 1.0, 1.0, 1.2, 1.2, 1.4, 1.4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.2, 0.4, 0.4, 0.6, 0.6, 0.8, 0.8, 1.0, 1.0, 1.2, 1.2, 1.4, 1.4, 0.2, 0.2, 0.4, 0.4, 0.6, 0.6, 0.8, 0.8, 1.0, 1.0, 1.2, 1.2, 1.4, 1.4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.2, 0.4, 0.4, 0.6, 0.6, 0.8, 0.8, 1.0, 1.0, 1.2, 1.2, 1.4, 1.4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,

AlphaMatrix: action=1
(AlphaVector 0) 0.04534, 0.20055, 0.74598, 1.6402, 2.2728, 2.5639, 2.6905, 0.04534, 0.04534, 0.20055, 0.20055, 0.74598, 0.74598, 1.6402, 1.6402, 2.2728, 2.2728, 2.5639, 2.5639, 2.6905, 2.6905, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 0.058283, 0.058283, 0.36872, 0.36872, 1.1116, 1.1116, 1.6333, 1.6333, 1.8251, 1.8251, 1.8936, 1.8936, 1.9216, 1.9216, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.058283, 0.058283, 0.36872, 0.36872, 1.1116, 1.1116, 1.6333, 1.6333, 1.8251, 1.8251, 1.8936, 1.8936, 1.9216, 1.9216, 0.55007, 0.55007, 0.64672, 0.64672, 0.80033, 0.80033, 0.89878, 0.89878, 0.93104, 0.93104, 0.93997, 0.93997, 0.94245, 0.94245, 0.058283, 0.058283, 0.36872, 0.36872, 1.1116, 1.1116, 1.6333, 1.6333, 1.8251, 1.8251, 1.8936, 1.8936, 1.9216, 1.9216, 0.04534, 0.04534, 0.20055, 0.20055, 0.74598, 0.74598, 1.6402, 1.6402, 2.2728, 2.2728, 2.5639, 2.5639, 2.6905, 2.6905, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
(AlphaVector 1) 0.2, 0.4, 0.6, 0.8, 1.0, 1.2, 1.4, 0.2, 0.2, 0.4, 0.4, 0.6, 0.6, 0.8, 0.8, 1.0, 1.0, 1.2, 1.2, 1.4, 1.4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.2, 0.4, 0.4, 0.6, 0.6, 0.8, 0.8, 1.0, 1.0, 1.2, 1.2, 1.4, 1.4, 0.2, 0.2, 0.4, 0.4, 0.6, 0.6, 0.8, 0.8, 1.0, 1.0, 1.2, 1.2, 1.4, 1.4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.2, 0.4, 0.4, 0.6, 0.6, 0.8, 0.8, 1.0, 1.0, 1.2, 1.2, 1.4, 1.4, 0.2, 0.2, 0.4, 0.4, 0.6, 0.6, 0.8, 0.8, 1.0, 1.0, 1.2, 1.2, 1.4, 1.4, 0.2, 0.2, 0.4, 0.4, 0.6, 0.6, 0.8, 0.8, 1.0, 1.0, 1.2, 1.2, 1.4, 1.4, 0.2, 0.2, 0.4, 0.4, 0.6, 0.6, 0.8, 0.8, 1.0, 1.0, 1.2, 1.2, 1.4, 1.4, 0.2, 0.2, 0.4, 0.4, 0.6, 0.6, 0.8, 0.8, 1.0, 1.0, 1.2, 1.2, 1.4, 1.4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,

AlphaMatrix: action=2
(AlphaVector 0) 0.55007, 0.64672, 0.80033, 0.89878, 0.93104, 0.93997, 0.94245, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 0.55007, 0.55007, 0.64672, 0.64672, 0.80033, 0.80033, 0.89878, 0.89878, 0.93104, 0.93104, 0.93997, 0.93997, 0.94245, 0.94245, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.55007, 0.55007, 0.64672, 0.64672, 0.80033, 0.80033, 0.89878, 0.89878, 0.93104, 0.93104, 0.93997, 0.93997, 0.94245, 0.94245, 0.55007, 0.55007, 0.64672, 0.64672, 0.80033, 0.80033, 0.89878, 0.89878, 0.93104, 0.93104, 0.93997, 0.93997, 0.94245, 0.94245, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
(AlphaVector 1) 0.2, 0.4, 0.6, 0.8, 1.0, 1.2, 1.4, 0.2, 0.2, 0.4, 0.4, 0.6, 0.6, 0.8, 0.8, 1.0, 1.0, 1.2, 1.2, 1.4, 1.4, 0.2, 0.2, 0.4, 0.4, 0.6, 0.6, 0.8, 0.8, 1.0, 1.0, 1.2, 1.2, 1.4, 1.4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.2, 0.4, 0.4, 0.6, 0.6, 0.8, 0.8, 1.0, 1.0, 1.2, 1.2, 1.4, 1.4, 0.2, 0.2, 0.4, 0.4, 0.6, 0.6, 0.8, 0.8, 1.0, 1.0, 1.2, 1.2, 1.4, 1.4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.2, 0.4, 0.4, 0.6, 0.6, 0.8, 0.8, 1.0, 1.0, 1.2, 1.2, 1.4, 1.4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,

Starting Prob1 (max)...
Prob1 (max) took 7 iterations and 0.016 seconds.
Belie set size= 389
Current Q (weight, priority) Before Pop[[1.0, 0.0, Infinity], [0.0, 1.0, Infinity]]
Current Q (weight, priority) After Pop[[1.0, 0.0, Infinity]]
Ar size= 2
calling solve scalarized POMDP
1dif=1000.4
2dif=1.3223839978250664
3dif=2.581742125255837
4dif=2.590837901562683
5dif=3.8549829856831317
6dif=2.5820338274302967
7dif=0.689868375725532
8dif=2.48714077810491
9dif=2.2744814969009965
10dif=0.11355483806391042
11dif=0.0
break
Best matrix=AlphaMatrix: action=0
(AlphaVector 0) 0.058283, 0.36872, 1.1116, 1.6333, 1.8251, 1.8936, 1.9216, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 0.058283, 0.058283, 0.36872, 0.36872, 1.1116, 1.1116, 1.6333, 1.6333, 1.8251, 1.8251, 1.8936, 1.8936, 1.9216, 1.9216, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04534, 0.04534, 0.20055, 0.20055, 0.74598, 0.74598, 1.6402, 1.6402, 2.2728, 2.2728, 2.5639, 2.5639, 2.6905, 2.6905, 0.04534, 0.04534, 0.20055, 0.20055, 0.74598, 0.74598, 1.6402, 1.6402, 2.2728, 2.2728, 2.5639, 2.5639, 2.6905, 2.6905, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.670706759627177,
(AlphaVector 1) 0.2, 0.4, 0.6, 0.8, 1.0, 1.2, 1.4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.2, 0.4, 0.4, 0.6, 0.6, 0.8, 0.8, 1.0, 1.0, 1.2, 1.2, 1.4, 1.4, 0.2, 0.2, 0.4, 0.4, 0.6, 0.6, 0.8, 0.8, 1.0, 1.0, 1.2, 1.2, 1.4, 1.4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.2, 0.4, 0.4, 0.6, 0.6, 0.8, 0.8, 1.0, 1.0, 1.2, 1.2, 1.4, 1.4, 0.2, 0.2, 0.4, 0.4, 0.6, 0.6, 0.8, 0.8, 1.0, 1.0, 1.2, 1.2, 1.4, 1.4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.2, 0.4, 0.4, 0.6, 0.6, 0.8, 0.8, 1.0, 1.0, 1.2, 1.2, 1.4, 1.4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.097449156194727,

value5.670706759627177
value5.097449156194727
add value vector from 1st exterme weights
1
Current Q (weight, priority) Before Pop[[1.0, 0.0, Infinity]]
Current Q (weight, priority) After Pop[]
Ar size= 15
calling solve scalarized POMDP
1dif=1009.278337499168
2dif=3.415687536363314
3dif=3.7546057506556254
4dif=0.5642847633984287
5dif=0.2608837051582924
6dif=0.12100344740434288
7dif=0.0
break
Best matrix=AlphaMatrix: action=0
(AlphaVector 0) 0.058283, 0.36872, 1.1116, 1.6333, 1.8251, 1.8936, 1.9216, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 0.058283, 0.058283, 0.36872, 0.36872, 1.1116, 1.1116, 1.6333, 1.6333, 1.8251, 1.8251, 1.8936, 1.8936, 1.9216, 1.9216, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04534, 0.04534, 0.20055, 0.20055, 0.74598, 0.74598, 1.6402, 1.6402, 2.2728, 2.2728, 2.5639, 2.5639, 2.6905, 2.6905, 0.04534, 0.04534, 0.20055, 0.20055, 0.74598, 0.74598, 1.6402, 1.6402, 2.2728, 2.2728, 2.5639, 2.5639, 2.6905, 2.6905, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 9.546315957687145,
(AlphaVector 1) 0.2, 0.4, 0.6, 0.8, 1.0, 1.2, 1.4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.2, 0.4, 0.4, 0.6, 0.6, 0.8, 0.8, 1.0, 1.0, 1.2, 1.2, 1.4, 1.4, 0.2, 0.2, 0.4, 0.4, 0.6, 0.6, 0.8, 0.8, 1.0, 1.0, 1.2, 1.2, 1.4, 1.4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.2, 0.4, 0.4, 0.6, 0.6, 0.8, 0.8, 1.0, 1.0, 1.2, 1.2, 1.4, 1.4, 0.2, 0.2, 0.4, 0.4, 0.6, 0.6, 0.8, 0.8, 1.0, 1.0, 1.2, 1.2, 1.4, 1.4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.2, 0.4, 0.4, 0.6, 0.6, 0.8, 0.8, 1.0, 1.0, 1.2, 1.2, 1.4, 1.4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 4.861278656951671,

value9.546315957687145
value4.861278656951671
elsess
+++++++++corner_to_value
[1.0, 0.0] -> [-Infinity, -Infinity]
[1.0, 0.0] -> [5.670706759627177, 5.097449156194727]
[0.0, 1.0] -> [-Infinity, -Infinity]
+++++++++value_to_corner
[5.670706759627177, 5.097449156194727] -> [1.0, 0.0]
obsolete_list: [1.0, 0.0]

found_value[-Infinity, -Infinity]
true
u[9.546315957687145, 4.861278656951671]
true
found_value[5.670706759627177, 5.097449156194727]
true
u[9.546315957687145, 4.861278656951671]
true
old_value_vectors: [5.670706759627177, 5.097449156194727]

old_value_vectors: [1.0]

old_value_vectors size2
one instace of combinations
[[5.670706759627177, 5.097449156194727]]
one instace of combinations
[[1.0]]
allsubsets: total number of combinations[[[5.670706759627177, 5.097449156194727]], [[1.0]]]2

A:[[5.670706759627177, 5.097449156194727, -1.0], [9.546315957687145, 4.861278656951671, -1.0], [1.0, 1.0, 0.0]]

b:[0.0, 0.0, 1.0]
Ab0:[[5.670706759627177, 5.097449156194727, -1.0, 0.0], [9.546315957687145, 4.861278656951671, -1.0, 0.0], [1.0, 1.0, 0.0, 1.0]]
k:0
Ab2:[[9.546315957687145, 4.861278656951671, -1.0, 0.0], [5.670706759627177, 5.097449156194727, -1.0, 0.0], [1.0, 1.0, 0.0, 1.0]]
Ab3:[[1.0, 0.5092308570655615, -0.10475245156690552, 0.0], [5.670706759627177, 5.097449156194727, -1.0, 0.0], [1.0, 1.0, 0.0, 1.0]]
Ab0:[[1.0, 0.5092308570655615, -0.10475245156690552, 0.0], [0.0, 2.209750292822306, -0.40597956481203035, 0.0], [0.0, 0.4907691429344385, 0.10475245156690552, 1.0]]
k:1
Ab2:[[1.0, 0.5092308570655615, -0.10475245156690552, 0.0], [0.0, 2.209750292822306, -0.40597956481203035, 0.0], [0.0, 0.4907691429344385, 0.10475245156690552, 1.0]]
Ab3:[[1.0, 0.5092308570655615, -0.10475245156690552, 0.0], [0.0, 1.0, -0.1837219192280368, 0.0], [0.0, 0.4907691429344385, 0.10475245156690552, 1.0]]
solved Ab:[[1.0, 0.0, 0.0, 0.05743753718078881], [0.0, 1.0, 0.0, 0.9425624628192112], [0.0, 0.0, 1.0, 5.130375661106048]]
generateing new weights by[9.546315957687145, 4.861278656951671]
1Number of New weights generated by :[9.546315957687145, 4.861278656951671]
w_new[0.05743753718078881, 0.9425624628192112]
w_new (sum to 1)[0.057438, 0.942562]
computing priority = 2

A:[[0.0, 1.0], [1.0, 0.0]]

b:[5.097449156194727, 9.546315957687145]
Ab0:[[0.0, 1.0, 5.097449156194727], [1.0, 0.0, 9.546315957687145]]
k:0
Ab2:[[1.0, 0.0, 9.546315957687145], [0.0, 1.0, 5.097449156194727]]
Ab3:[[1.0, 0.0, 9.546315957687145], [0.0, 1.0, 5.097449156194727]]
solved Ab:[[1.0, 0.0, 9.546315957687145], [0.0, 1.0, 5.097449156194727]]
computing priority = 0.041585286398328154

A:[[9.546315957687145, -1.0], [1.0, 0.0]]

b:[0.0, 1.0]
Ab0:[[9.546315957687145, -1.0, 0.0], [1.0, 0.0, 1.0]]
k:0
Ab2:[[9.546315957687145, -1.0, 0.0], [1.0, 0.0, 1.0]]
Ab3:[[1.0, -0.10475245156690552, 0.0], [1.0, 0.0, 1.0]]
solved Ab:[[1.0, 0.0, 1.0], [0.0, 1.0, 9.546315957687145]]
Extreme... continue
Current Q (weight, priority) Before Pop[[0.057438, 0.942562, 0.041585286398328154]]
Current Q (weight, priority) After Pop[]
Ar size= 20
calling solve scalarized POMDP
1dif=1005.8042613414495
2dif=1.2464289057579907
3dif=0.06431311098840187
4dif=0.11784856805682953
5dif=0.0
break
Best matrix=AlphaMatrix: action=0
(AlphaVector 0) 0.058283, 0.36872, 1.1116, 1.6333, 1.8251, 1.8936, 1.9216, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 0.058283, 0.058283, 0.36872, 0.36872, 1.1116, 1.1116, 1.6333, 1.6333, 1.8251, 1.8251, 1.8936, 1.8936, 1.9216, 1.9216, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04534, 0.04534, 0.20055, 0.20055, 0.74598, 0.74598, 1.6402, 1.6402, 2.2728, 2.2728, 2.5639, 2.5639, 2.6905, 2.6905, 0.04534, 0.04534, 0.20055, 0.20055, 0.74598, 0.74598, 1.6402, 1.6402, 2.2728, 2.2728, 2.5639, 2.5639, 2.6905, 2.6905, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 8.900759707095713,
(AlphaVector 1) 0.2, 0.4, 0.6, 0.8, 1.0, 1.2, 1.4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.2, 0.4, 0.4, 0.6, 0.6, 0.8, 0.8, 1.0, 1.0, 1.2, 1.2, 1.4, 1.4, 0.2, 0.2, 0.4, 0.4, 0.6, 0.6, 0.8, 0.8, 1.0, 1.0, 1.2, 1.2, 1.4, 1.4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.2, 0.4, 0.4, 0.6, 0.6, 0.8, 0.8, 1.0, 1.0, 1.2, 1.2, 1.4, 1.4, 0.2, 0.2, 0.4, 0.4, 0.6, 0.6, 0.8, 0.8, 1.0, 1.0, 1.2, 1.2, 1.4, 1.4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.2, 0.4, 0.4, 0.6, 0.6, 0.8, 0.8, 1.0, 1.0, 1.2, 1.2, 1.4, 1.4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 4.968849905219553,

value8.900759707095713
value4.968849905219553
elsess
+++++++++corner_to_value
[1.0, 0.0] -> [-Infinity, -Infinity]
[1.0, 0.0] -> [5.670706759627177, 5.097449156194727]
[0.0, 1.0] -> [-Infinity, -Infinity]
[0.057438, 0.942562] -> [9.546315957687145, 4.861278656951671]
+++++++++value_to_corner
[5.670706759627177, 5.097449156194727] -> [1.0, 0.0]
obsolete_list: [0.057438, 0.942562]

found_value[9.546315957687145, 4.861278656951671]
true
u[8.900759707095713, 4.968849905219553]
true
old_value_vectors: [9.546315957687145, 4.861278656951671]

old_value_vectors size1
one instace of combinations
[[9.546315957687145, 4.861278656951671]]
allsubsets: total number of combinations[[[9.546315957687145, 4.861278656951671]]]1

A:[[9.546315957687145, 4.861278656951671, -1.0], [8.900759707095713, 4.968849905219553, -1.0], [1.0, 1.0, 0.0]]

b:[0.0, 0.0, 1.0]
Ab0:[[9.546315957687145, 4.861278656951671, -1.0, 0.0], [8.900759707095713, 4.968849905219553, -1.0, 0.0], [1.0, 1.0, 0.0, 1.0]]
k:0
Ab2:[[9.546315957687145, 4.861278656951671, -1.0, 0.0], [8.900759707095713, 4.968849905219553, -1.0, 0.0], [1.0, 1.0, 0.0, 1.0]]
Ab3:[[1.0, 0.5092308570655615, -0.10475245156690552, 0.0], [8.900759707095713, 4.968849905219553, -1.0, 0.0], [1.0, 1.0, 0.0, 1.0]]
Ab0:[[1.0, 0.5092308570655615, -0.10475245156690552, 0.0], [0.0, 0.4363084110405877, -0.06762359987379218, 0.0], [0.0, 0.4907691429344385, 0.10475245156690552, 1.0]]
k:1
Ab2:[[1.0, 0.5092308570655615, -0.10475245156690552, 0.0], [0.0, 0.4907691429344385, 0.10475245156690552, 1.0], [0.0, 0.4363084110405877, -0.06762359987379218, 0.0]]
Ab3:[[1.0, 0.5092308570655615, -0.10475245156690552, 0.0], [0.0, 1.0, 0.213445472428366, 2.0376179195389823], [0.0, 0.4363084110405877, -0.06762359987379218, 0.0]]
solved Ab:[[1.0, 0.0, 0.0, 0.1428327188036676], [0.0, 1.0, 0.0, 0.8571672811963325], [-0.0, -0.0, 1.0, 5.530455272312316]]
generateing new weights by[8.900759707095713, 4.968849905219553]
1Number of New weights generated by :[8.900759707095713, 4.968849905219553]
w_new[0.1428327188036676, 0.8571672811963325]
w_new (sum to 1)[0.142833, 0.857167]
computing priority = 2

A:[[1.0, 0.0], [0.057438, 0.942562]]

b:[9.546315957687145, 5.194690940419717]
Ab0:[[1.0, 0.0, 9.546315957687145], [0.057438, 0.942562, 5.194690940419717]]
k:0
Ab2:[[1.0, 0.0, 9.546315957687145], [0.057438, 0.942562, 5.194690940419717]]
Ab3:[[1.0, 0.0, 9.546315957687145], [0.057438, 0.942562, 5.194690940419717]]
solved Ab:[[1.0, 0.0, 9.546315957687145], [0.0, 1.0, 4.929510890999301]]
computing priority = 0.010464703440968318
Current Q (weight, priority) Before Pop[[0.142833, 0.857167, 0.010464703440968318]]
Current Q (weight, priority) After Pop[]
Ar size= 17
calling solve scalarized POMDP
1dif=1006.1417370637121
2dif=0.020052233552858567
3dif=2.11776691294574E-7
break
Best matrix=AlphaMatrix: action=0
(AlphaVector 0) 0.058283, 0.36872, 1.1116, 1.6333, 1.8251, 1.8936, 1.9216, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 5.0, 0.058283, 0.058283, 0.36872, 0.36872, 1.1116, 1.1116, 1.6333, 1.6333, 1.8251, 1.8251, 1.8936, 1.8936, 1.9216, 1.9216, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.04534, 0.04534, 0.20055, 0.20055, 0.74598, 0.74598, 1.6402, 1.6402, 2.2728, 2.2728, 2.5639, 2.5639, 2.6905, 2.6905, 0.04534, 0.04534, 0.20055, 0.20055, 0.74598, 0.74598, 1.6402, 1.6402, 2.2728, 2.2728, 2.5639, 2.5639, 2.6905, 2.6905, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 9.546315957687145,
(AlphaVector 1) 0.2, 0.4, 0.6, 0.8, 1.0, 1.2, 1.4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.2, 0.4, 0.4, 0.6, 0.6, 0.8, 0.8, 1.0, 1.0, 1.2, 1.2, 1.4, 1.4, 0.2, 0.2, 0.4, 0.4, 0.6, 0.6, 0.8, 0.8, 1.0, 1.0, 1.2, 1.2, 1.4, 1.4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.2, 0.4, 0.4, 0.6, 0.6, 0.8, 0.8, 1.0, 1.0, 1.2, 1.2, 1.4, 1.4, 0.2, 0.2, 0.4, 0.4, 0.6, 0.6, 0.8, 0.8, 1.0, 1.0, 1.2, 1.2, 1.4, 1.4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.2, 0.4, 0.4, 0.6, 0.6, 0.8, 0.8, 1.0, 1.0, 1.2, 1.2, 1.4, 1.4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 4.861278656951671,

value9.546315957687145
value4.861278656951671
Vector already in the partial CCS
ALl weights checked:4
weight: [0.0, 1.0]; vector: [5.670706759627177, 5.097449156194727]
weight: [1.0, 0.0]; vector: [9.546315957687145, 4.861278656951671]
weight: [0.057438, 0.942562]; vector: [8.900759707095713, 4.968849905219553]
weight: [0.142833, 0.857167]; vector: [9.546315957687145, 4.861278656951671]
*********************ParetoCurve by optimal linear solution*******************************
weight: [0.0, 1.0]; vector: [5.670706759627177, 5.097449156194727]
weight: [1.0, 0.0]; vector: [9.546315957687145, 4.861278656951671]
weight: [0.057438, 0.942562]; vector: [8.900759707095713, 4.968849905219553]
#weights: 3
[0.0, 1.0]
[1.0, 0.0]
[0.057438, 0.942562]
#Parecto Curve points: 3

[5.670706759627177, 5.097449156194727]
[9.546315957687145, 4.861278656951671]
[8.900759707095713, 4.968849905219553]

Value in the initial state: 0.0

Time for model checking: 120.453 seconds.

Result: 0.0

